language: python
python:
  - "2.7"
# command to install dependencies
# install: "pip install -r requirements.txt"
# command to run tests
env:
  - TESTMODE=full
    COVERAGE=--coverage
before_install:
  - uname -a
  - free -m
  - df -h
  - ulimit -a
  - sudo apt-get update -qq
  - sudo apt-get install python-opencv
#   # install opencv
#   - sudo apt-get install -qq libopencv-dev python-dev unzip
#   - sudo apt-get install -qq build-essential checkinstall cmake 
#   - wget -O OpenCV-2.4.9.zip http://sourceforge.net/projects/opencvlibrary/files/opencv-unix/2.4.9/opencv-2.4.9.zip/download
#   - unzip OpenCV-2.4.9.zip
#   - cd opencv-2.4.9/
#   - mkdir build
#   - cd build
#   - cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local -D BUILD_ZLIB=ON -D BUILD_NEW_PYTHON_SUPPORT=ON ..
#   - make
#   - sudo make install
#   - sudo sh -c 'echo "/usr/local/lib" > /etc/ld.so.conf.d/opencv.conf'
#   - sudo ldconfig
#   - cd
  # install deps
  - sudo apt-get install -qq libatlas-dev libatlas-base-dev liblapack-dev gfortran python-libtiff
  - sudo pip install conda
  - sudo conda init
  - sudo conda update conda --yes
  - deps='pip numpy>=1.8 scipy>=0.13 nose shapely h5py cython scikit-image pep8 flake8 scikit-learn'
  - conda create -p $HOME/py --yes $deps "python=$TRAVIS_PYTHON_VERSION"
  - export PATH=$HOME/py/bin:$PATH
  - if [ "${TESTMODE}" == "full" ]; then pip install coverage coveralls; fi
  # - pip install --upgrade scikits-image h5py
  - python -V
script: 
    - python runtests.py --doctests -m $TESTMODE $COVERAGE
    - flake8 *.py sima --exclude sima/misc/tifffile.py,sima/__init__.py,test*.py
    - pep8 *.py sima --exclude tifffile.py
branches:
  only:
    - master
    - 0.2.x
    - 0.3.x
after_success:
    - if [ "${TESTMODE}" == "full" ]; then cp build/test/.coverage . && coveralls; fi
